1.二叉树的遍历是指按某条搜索路径访问树中每一个结点，使得每个结点被且仅被访问一次
(1)先序遍历:根->左->右
(2)中序遍历:左->根->右
(3)后序遍历:左->右->根
序指的是根结点何时被访问
2.二叉树的层次遍历--即一层层遍历各元素
3.先序序列+中序序列/后序序列+中序序列都可以唯一地确定一棵二叉树
但是先序序列+后序序列不能确定一颗二叉树
4.线索二叉树:以一定的规则将二叉树的结点排列成一个线性序列,从而得到集中遍历序列,使得
除第一个和最后一个结点以外的结点都有一个直接前驱和直接后继
    (1)若无左子树,则lchild指向其前驱结点;无右子树,rchild指向其后继结点
    (2)线索二叉树的结点结构lchild|ltag|data|rtag|rchild
    (3)l(r)tag=0表示是左孩子,=1表示是前驱后继

5.二叉树的线索化是将二叉链表中的空指针改为前驱或后继的线索
而前驱或后继的信息只有在遍历时才能得到,因此线索化的实质就是遍历一次二叉树
6.可以在二叉树的线索链表上添加一个头结点
    (1)其lchild指向二叉树的根结点
    (2)rchild指向中序遍历的最后一个结点
    (3)中序遍历的第一个结点的lchild指向头结点
    (4)中序遍历的最后一个结点的rchild指向头结点
    (5)等于建立了一个双向线索链表 方便从前往后或者从后往前



1.? C 
前序遍历的最后一个结点一定是叶子结点,但中序遍历的最后一个结点是沿右孩子指针走到底的结点,未必是叶子结点。
如果都是叶子结点,那中序和后续遍历的最后一个结点是同一个结点
后续遍历的最后一个结点是根结点
2.C
3.C
4.D
5.A C 后续遍历算法时,根结点会被压入栈里,所以如果m是n的祖先,在后续遍历访问到n时,回退栈中保存的结点到m,就是m到n的路线
6.? B 二叉树的叶子结点的先后顺序在前序中序后序遍历中完全相同,区别只在于根结点何时被访问
7.C
8.D
9.C 前序后续要正好相反,即根左右<-->左右根,那么只能是左根<-->根左,或者右根<-->根右,即只有左子树或右子树
10.C
11.C
12.D
13.B 二叉树的叶子结点的先后顺序在前序中序后序遍历中完全相同,区别只在于根结点何时被访问
14.C
15.A
16.B
17.D
18.D
19.A
20.B
21.B
22.A
23.? C 二叉树是逻辑结构;线索二叉树是二叉树在计算机内部的一种存储结构即"物理结构"
24.C
25.C
26.D
27.D
28.D
29.D 后续二叉树的某个结点的前驱是它的左/右孩子,但是如果他有左右孩子,则它没有指针指向后继元素,所以后继线索二叉树不能有效查找到后继元素
30.C
31.C?
32.A
33.D
34.B **
35.B

1.